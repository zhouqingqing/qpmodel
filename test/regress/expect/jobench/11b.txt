SELECT MIN(cn.name) AS from_company,
       MIN(lt.link) AS movie_link_type,
       MIN(t.title) AS sequel_movie
FROM company_name AS cn,
     company_type AS ct,
     keyword AS k,
     link_type AS lt,
     movie_companies AS mc,
     movie_keyword AS mk,
     movie_link AS ml,
     title AS t
WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follows%'
  AND mc.note IS NULL
  AND t.production_year = 1998
  AND t.title LIKE '%Money%'
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
Total cost: 17234112, memory=10737421568
PhysicHashAgg  (inccost=17234112, cost=3, rows=1, memory=4294967360) (actual rows=1)
    Output: {min(name)}[0],{min(link)}[1],{min(title)}[2]
    Aggregates: min(name[0]), min(link[1]), min(title[2])
    -> PhysicHashJoin  (inccost=17234109, cost=9763, rows=1, memory=2147483720) (actual rows=0)
        Output: name[3],link[0],title[1]
        Filter: company_id[2]=id[4]
        -> PhysicHashJoin  (inccost=16989349, cost=30000, rows=1, memory=2147483752) (actual rows=0)
            Output: link[0],title[1],company_id[2]
            Filter: movie_id[7]=id[3] and id[4]=link_type_id[8] and movie_id[7]=movie_id[5] and movie_id[7]=movie_id[6]
            -> PhysicHashJoin  (inccost=16929352, cost=2609132, rows=1, memory=2147483744) (actual rows=0)
                Output: link[0],title[1],company_id[6],id[2],id[3],movie_id[4],movie_id[7]
                Filter: movie_id[4]=movie_id[7] and id[2]=movie_id[7] and company_type_id[8]=id[5]
                -> PhysicHashJoin  (inccost=11711091, cost=450, rows=1, memory=2904) (actual rows=0)
                    Output: link[0],title[4],id[5],id[1],movie_id[2],id[3]
                    Filter: id[5]=movie_id[2]
                    -> PhysicHashJoin  (inccost=9182329, cost=4523965, rows=33, memory=88) (actual rows=0)
                        Output: link[0],id[1],movie_id[4],id[2]
                        Filter: keyword_id[5]=id[3]
                        -> PhysicNLJoin  (inccost=134434, cost=121, rows=1) (actual rows=0)
                            Output: link[0],id[1],id[2],id[3]
                            -> PhysicScanTable link_type as lt (inccost=18, cost=18, rows=1) (actual rows=0)
                                Output: link[1],id[0]
                                Filter: link[1]like'%follows%'
                            -> PhysicNLJoin  (inccost=134295, cost=121, rows=1) (actual rows=0)
                                Output: id[1],id[0]
                                -> PhysicScanTable keyword as k (inccost=134170, cost=134170, rows=1) (actual rows=0)
                                    Output: id[0]
                                    Filter: keyword[1]='sequel'
                                -> PhysicScanTable company_type as ct (inccost=4, cost=4, rows=1) (actual rows=0)
                                    Output: id[0]
                                    Filter: kind[1]='production companies'
                        -> PhysicScanTable movie_keyword as mk (inccost=4523930, cost=4523930, rows=4523930) (actual rows=0)
                            Output: movie_id[1],keyword_id[2]
                    -> PhysicScanTable title as t (inccost=2528312, cost=2528312, rows=383) (actual rows=0)
                        Output: title[1],id[0]
                        Filter: production_year[4]=1998 and title[1]like'%Money%'
                -> PhysicScanTable movie_companies as mc (inccost=2609129, cost=2609129, rows=2609129) (actual rows=0)
                    Output: company_id[2],movie_id[1],company_type_id[3]
                    Filter: note[4]isnull
            -> PhysicScanTable movie_link as ml (inccost=29997, cost=29997, rows=29997) (actual rows=0)
                Output: movie_id[1],link_type_id[3]
        -> PhysicScanTable company_name as cn (inccost=234997, cost=234997, rows=9760) (actual rows=0)
            Output: name[1],id[0]
            Filter: country_code[2]!='[pl]' and name[1]like'%Film%' or name[1]like'%Warner%'
,,

