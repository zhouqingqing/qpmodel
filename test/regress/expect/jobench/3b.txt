SELECT MIN(t.title) AS movie_title
FROM keyword AS k,
     movie_info AS mi,
     movie_keyword AS mk,
     title AS t
WHERE k.keyword LIKE '%sequel%'
  AND mi.info IN ('Bulgaria')
  AND t.production_year > 2010
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND mk.movie_id = mi.movie_id
  AND k.id = mk.keyword_id
Total cost: 26949361, memory=6442450984
PhysicHashAgg  (inccost=26949361, cost=3, rows=1, memory=2147483648) (actual rows=1)
    Output: {min(title)}[0]
    Aggregates: min(title[0])
    -> PhysicHashJoin  (inccost=26949358, cost=217, rows=1, memory=2147483656) (actual rows=0)
        Output: title[0]
        Filter: id[2]=keyword_id[1]
        -> PhysicHashJoin  (inccost=26814971, cost=4523933, rows=1, memory=2147483664) (actual rows=0)
            Output: title[0],keyword_id[3]
            Filter: id[1]=movie_id[4] and movie_id[4]=movie_id[2]
            -> PhysicHashJoin  (inccost=17767108, cost=403076, rows=1, memory=16) (actual rows=0)
                Output: title[1],id[2],movie_id[0]
                Filter: id[2]=movie_id[0]
                -> PhysicScanTable movie_info as mi (inccost=14835720, cost=14835720, rows=2) (actual rows=0)
                    Output: movie_id[1]
                    Filter: info[3] in ('Bulgaria')
                -> PhysicScanTable title as t (inccost=2528312, cost=2528312, rows=403071) (actual rows=0)
                    Output: title[1],id[0]
                    Filter: production_year[4]>2010
            -> PhysicScanTable movie_keyword as mk (inccost=4523930, cost=4523930, rows=4523930) (actual rows=0)
                Output: keyword_id[2],movie_id[1]
        -> PhysicScanTable keyword as k (inccost=134170, cost=134170, rows=214) (actual rows=0)
            Output: id[0]
            Filter: keyword[1]like'%sequel%'


