SELECT MIN(k.keyword) AS movie_keyword,
       MIN(n.name) AS actor_name,
       MIN(t.title) AS marvel_movie
FROM cast_info AS ci,
     keyword AS k,
     movie_keyword AS mk,
     name AS n,
     title AS t
WHERE k.keyword = 'marvel-cinematic-universe'
  AND n.name LIKE '%Downey%Robert%'
  AND t.production_year > 2000
  AND k.id = mk.keyword_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mk.movie_id
  AND n.id = ci.person_id
Total cost: 89788573, memory=94489280832
PhysicHashAgg  (inccost=89788573, cost=3, rows=1, memory=6442450944) (actual rows=1)
    Output: {min(keyword)}[0],{min(name)}[1],{min(title)}[2]
    Aggregates: min(keyword[0]), min(name[1]), min(title[2])
    -> PhysicHashJoin  (inccost=89788570, cost=4, rows=1, memory=4294967304) (actual rows=0)
        Output: keyword[3],name[0],title[1]
        Filter: id[4]=keyword_id[2]
        -> PhysicHashJoin  (inccost=89654396, cost=4523951, rows=1, memory=42949673120) (actual rows=0)
            Output: name[0],title[1],keyword_id[4]
            Filter: id[2]=movie_id[5] and movie_id[3]=movie_id[5]
            -> PhysicHashJoin  (inccost=80606515, cost=1422003, rows=10, memory=36507222152) (actual rows=0)
                Output: name[0],title[2],id[3],movie_id[1]
                Filter: id[3]=movie_id[1]
                -> PhysicHashJoin  (inccost=76656200, cost=36244365, rows=17, memory=4294967312) (actual rows=0)
                    Output: name[0],movie_id[2]
                    Filter: id[1]=person_id[3]
                    -> PhysicScanTable name as n (inccost=4167491, cost=4167491, rows=2) (actual rows=0)
                        Output: name[1],id[0]
                        Filter: name[1]like'%Downey%Robert%'
                    -> PhysicScanTable cast_info as ci (inccost=36244344, cost=36244344, rows=36244344) (actual rows=0)
                        Output: movie_id[2],person_id[1]
                -> PhysicScanTable title as t (inccost=2528312, cost=2528312, rows=1421959) (actual rows=0)
                    Output: title[1],id[0]
                    Filter: production_year[4]>2000
            -> PhysicScanTable movie_keyword as mk (inccost=4523930, cost=4523930, rows=4523930) (actual rows=0)
                Output: keyword_id[2],movie_id[1]
        -> PhysicScanTable keyword as k (inccost=134170, cost=134170, rows=1) (actual rows=0)
            Output: keyword[1],id[0]
            Filter: keyword[1]='marvel-cinematic-universe'
,,

