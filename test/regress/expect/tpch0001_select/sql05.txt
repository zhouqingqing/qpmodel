select	(select count(O.o_orderkey) 
	 	from orders O 
	 	where O.o_custkey = 37) as OrderCount, 
	c_name,
	(select count(O2.o_custkey) 
		from orders O2
		where O2.o_custkey = 26) as CustPhone
from customer C
where exists
	(
		select *
		from nation N
		where N.n_name like '%A%'
		and exists(
			select * 
			from region R
			where N.n_regionkey = R.r_regionkey
			and R.r_regionkey<2
		)
	)
order by c_name
Total cost: 5842.59, memory=4950
PhysicOrder  (inccost=5842.59, cost=766.59, rows=150, memory=4950) (actual rows=150)
    Output: @1,c_name[0],@2
    <ScalarSubqueryExpr> cached 1
        -> PhysicHashAgg  (inccost=1541, cost=3, rows=1, memory=2) (actual rows=1)
            Output: {sum({count(o_orderkey)})}[0]
            Aggregates: sum({count(o_orderkey)}[0])
            -> PhysicGather Threads: 10 (inccost=1538, cost=10, rows=1) (actual rows=10)
                Output: {count(o_orderkey)}[0]
                -> PhysicHashAgg  (inccost=1528, cost=28, rows=1, memory=8) (actual rows=1, loops=10)
                    Output: {count(o_orderkey)}[0]
                    Aggregates: count(o_orderkey[0])
                    -> PhysicScanTable orders as o (inccost=1500, cost=1500, rows=26) (actual rows=2, loops=10)
                        Output: o_orderkey[0]
                        Filter: o_custkey[1]=37

    <ScalarSubqueryExpr> cached 2
        -> PhysicHashAgg  (inccost=1525, cost=3, rows=1, memory=2) (actual rows=1)
            Output: {sum({count(o_custkey)})}[0]
            Aggregates: sum({count(o_custkey)}[0])
            -> PhysicGather Threads: 10 (inccost=1522, cost=10, rows=1) (actual rows=10)
                Output: {count(o_custkey)}[0]
                -> PhysicHashAgg  (inccost=1512, cost=12, rows=1, memory=8) (actual rows=1, loops=10)
                    Output: {count(o_custkey)}[0]
                    Aggregates: count(o_custkey[0])
                    -> PhysicScanTable orders as o2 (inccost=1500, cost=1500, rows=10) (actual rows=1, loops=10)
                        Output: o_custkey[1]
                        Filter: o_custkey[1]=26

    Order by: c_name[0]
    -> PhysicGather Threads: 10 (inccost=2010, cost=1500, rows=150) (actual rows=150)
        Output: c_name[0]
        -> PhysicScanTable customer as c (inccost=510, cost=150, rows=150) (actual rows=15, loops=10)
            Output: c_name[1]
            Filter: @3
            <ExistSubqueryExpr> cached 3
                -> PhysicFilter  (inccost=360, cost=10, rows=10) (actual rows=8)
                    Output: n_nationkey[0],n_name[1],n_regionkey[2],n_comment[3]
                    Filter: {#marker@4}[4]
                    -> PhysicMarkJoin Left (inccost=350, cost=50, rows=10) (actual rows=21)
                        Output: n_nationkey[0],n_name[1],n_regionkey[2],n_comment[3],{#marker@4}[4]
                        Filter: n_regionkey[2]=r_regionkey[4]
                        -> PhysicGather Threads: 10 (inccost=275, cost=250, rows=25) (actual rows=21)
                            Output: n_nationkey[0],n_name[1],n_regionkey[2],n_comment[3]
                            -> PhysicScanTable nation as n (inccost=25, cost=25, rows=25) (actual rows=21)
                                Output: n_nationkey[0],n_name[1],n_regionkey[2],n_comment[3]
                                Filter: n_name[1] like '%A%'
                        -> PhysicGather Threads: 10 (inccost=25, cost=20, rows=2) (actual rows=2, loops=21)
                            Output: r_regionkey[0]
                            -> PhysicScanTable region as r (inccost=5, cost=5, rows=2) (actual rows=2)
                                Output: r_regionkey[0]
                                Filter: r_regionkey[0]<2
26,Customer#000000001,10
26,Customer#000000002,10
26,Customer#000000003,10
26,Customer#000000004,10
26,Customer#000000005,10
26,Customer#000000006,10
26,Customer#000000007,10
26,Customer#000000008,10
26,Customer#000000009,10
26,Customer#000000010,10
26,Customer#000000011,10
26,Customer#000000012,10
26,Customer#000000013,10
26,Customer#000000014,10
26,Customer#000000015,10
26,Customer#000000016,10
26,Customer#000000017,10
26,Customer#000000018,10
26,Customer#000000019,10
26,Customer#000000020,10
26,Customer#000000021,10
26,Customer#000000022,10
26,Customer#000000023,10
26,Customer#000000024,10
26,Customer#000000025,10
26,Customer#000000026,10
26,Customer#000000027,10
26,Customer#000000028,10
26,Customer#000000029,10
26,Customer#000000030,10
26,Customer#000000031,10
26,Customer#000000032,10
26,Customer#000000033,10
26,Customer#000000034,10
26,Customer#000000035,10
26,Customer#000000036,10
26,Customer#000000037,10
26,Customer#000000038,10
26,Customer#000000039,10
26,Customer#000000040,10
26,Customer#000000041,10
26,Customer#000000042,10
26,Customer#000000043,10
26,Customer#000000044,10
26,Customer#000000045,10
26,Customer#000000046,10
26,Customer#000000047,10
26,Customer#000000048,10
26,Customer#000000049,10
26,Customer#000000050,10
26,Customer#000000051,10
26,Customer#000000052,10
26,Customer#000000053,10
26,Customer#000000054,10
26,Customer#000000055,10
26,Customer#000000056,10
26,Customer#000000057,10
26,Customer#000000058,10
26,Customer#000000059,10
26,Customer#000000060,10
26,Customer#000000061,10
26,Customer#000000062,10
26,Customer#000000063,10
26,Customer#000000064,10
26,Customer#000000065,10
26,Customer#000000066,10
26,Customer#000000067,10
26,Customer#000000068,10
26,Customer#000000069,10
26,Customer#000000070,10
26,Customer#000000071,10
26,Customer#000000072,10
26,Customer#000000073,10
26,Customer#000000074,10
26,Customer#000000075,10
26,Customer#000000076,10
26,Customer#000000077,10
26,Customer#000000078,10
26,Customer#000000079,10
26,Customer#000000080,10
26,Customer#000000081,10
26,Customer#000000082,10
26,Customer#000000083,10
26,Customer#000000084,10
26,Customer#000000085,10
26,Customer#000000086,10
26,Customer#000000087,10
26,Customer#000000088,10
26,Customer#000000089,10
26,Customer#000000090,10
26,Customer#000000091,10
26,Customer#000000092,10
26,Customer#000000093,10
26,Customer#000000094,10
26,Customer#000000095,10
26,Customer#000000096,10
26,Customer#000000097,10
26,Customer#000000098,10
26,Customer#000000099,10
26,Customer#000000100,10
26,Customer#000000101,10
26,Customer#000000102,10
26,Customer#000000103,10
26,Customer#000000104,10
26,Customer#000000105,10
26,Customer#000000106,10
26,Customer#000000107,10
26,Customer#000000108,10
26,Customer#000000109,10
26,Customer#000000110,10
26,Customer#000000111,10
26,Customer#000000112,10
26,Customer#000000113,10
26,Customer#000000114,10
26,Customer#000000115,10
26,Customer#000000116,10
26,Customer#000000117,10
26,Customer#000000118,10
26,Customer#000000119,10
26,Customer#000000120,10
26,Customer#000000121,10
26,Customer#000000122,10
26,Customer#000000123,10
26,Customer#000000124,10
26,Customer#000000125,10
26,Customer#000000126,10
26,Customer#000000127,10
26,Customer#000000128,10
26,Customer#000000129,10
26,Customer#000000130,10
26,Customer#000000131,10
26,Customer#000000132,10
26,Customer#000000133,10
26,Customer#000000134,10
26,Customer#000000135,10
26,Customer#000000136,10
26,Customer#000000137,10
26,Customer#000000138,10
26,Customer#000000139,10
26,Customer#000000140,10
26,Customer#000000141,10
26,Customer#000000142,10
26,Customer#000000143,10
26,Customer#000000144,10
26,Customer#000000145,10
26,Customer#000000146,10
26,Customer#000000147,10
26,Customer#000000148,10
26,Customer#000000149,10
26,Customer#000000150,10

