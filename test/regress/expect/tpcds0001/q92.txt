select  
   sum(ws_ext_discount_amt)  as "Excess Discount Amount" 
from 
    web_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 714
and i_item_sk = ws_item_sk 
and d_date between date '2000-02-01' and
        (cast('2000-02-01' as date) + 90 days)
and d_date_sk = ws_sold_date_sk 
and ws_ext_discount_amt  
     > ( 
         SELECT 
            1.3 * avg(ws_ext_discount_amt) 
         FROM 
            web_sales 
           ,date_dim
         WHERE 
              ws_item_sk = i_item_sk 
          and d_date between date '2000-02-01' and
                             (cast('2000-02-01' as date) + 90 days)
          and d_date_sk = ws_sold_date_sk 
      ) 
order by sum(ws_ext_discount_amt)
limit 100
Total cost: 92832.1, memory=33743
PhysicLimit (100) (inccost=92832.1, cost=100, rows=100) (actual rows=1)
    Output: {sum(web_sales.ws_ext_discount_amt)}[0]
    -> PhysicOrder  (inccost=92732.1, cost=0.1, rows=1, memory=7) (actual rows=1)
        Output: {sum(web_sales.ws_ext_discount_amt)}[0]
        Order by: {sum(web_sales.ws_ext_discount_amt)}[0]
        -> PhysicHashAgg  (inccost=92732, cost=3, rows=1, memory=14) (actual rows=1)
            Output: {sum(web_sales.ws_ext_discount_amt)}[0]
            Aggregates: sum(web_sales.ws_ext_discount_amt[0])
            -> PhysicFilter  (inccost=92729, cost=1, rows=1) (actual rows=0)
                Output: web_sales.ws_ext_discount_amt[0]
                Filter: web_sales.ws_ext_discount_amt[0]>{avg(web_sales__1.ws_ext_discount_amt)}[1]*1.3
                -> PhysicHashJoin Left (inccost=92728, cost=1485, rows=1, memory=22) (actual rows=0)
                    Output: web_sales.ws_ext_discount_amt[0],{avg(web_sales__1.ws_ext_discount_amt)}[2]
                    Filter: web_sales__1.ws_item_sk[3]=item.i_item_sk[1]
                    -> PhysicHashJoin  (inccost=43633, cost=115, rows=1, memory=360) (actual rows=0)
                        Output: web_sales.ws_ext_discount_amt[0],item.i_item_sk[1]
                        Filter: date_dim.d_date_sk[3]=web_sales.ws_sold_date_sk[2]
                        -> PhysicHashJoin  (inccost=25768, cost=11892, rows=12, memory=16) (actual rows=0)
                            Output: web_sales.ws_ext_discount_amt[1],item.i_item_sk[0],web_sales.ws_sold_date_sk[2]
                            Filter: item.i_item_sk[0]=web_sales.ws_item_sk[3]
                            -> PhysicScanTable item (inccost=2000, cost=2000, rows=2) (actual rows=0)
                                Output: item.i_item_sk[0]
                                Filter: item.i_manufact_id[13]=714
                            -> PhysicScanTable web_sales (inccost=11876, cost=11876, rows=11876) (actual rows=0)
                                Output: web_sales.ws_ext_discount_amt[22],web_sales.ws_sold_date_sk[0],web_sales.ws_item_sk[3]
                        -> PhysicScanTable date_dim (inccost=17750, cost=17750, rows=90) (actual rows=0)
                            Output: date_dim.d_date_sk[0]
                            Filter: (date_dim.d_date[2]>='2000-02-01' and date_dim.d_date[2]<='5/1/2000 12:00:00 AM')
                    -> PhysicHashAgg  (inccost=47610, cost=4446, rows=1482, memory=32604) (actual rows=0)
                        Output: {avg(web_sales__1.ws_ext_discount_amt)}[1],{web_sales__1.ws_item_sk}[0]
                        Aggregates: avg(web_sales__1.ws_ext_discount_amt[1])
                        Group by: web_sales__1.ws_item_sk[0]
                        -> PhysicHashJoin  (inccost=43164, cost=13538, rows=1482, memory=720) (actual rows=0)
                            Output: web_sales__1.ws_item_sk[1],web_sales__1.ws_ext_discount_amt[2]
                            Filter: date_dim__1.d_date_sk[0]=web_sales__1.ws_sold_date_sk[3]
                            -> PhysicScanTable date_dim as date_dim__1 (inccost=17750, cost=17750, rows=90) (actual rows=0)
                                Output: date_dim__1.d_date_sk[0]
                                Filter: (date_dim__1.d_date[2]>='2000-02-01' and date_dim__1.d_date[2]<='5/1/2000 12:00:00 AM')
                            -> PhysicScanTable web_sales as web_sales__1 (inccost=11876, cost=11876, rows=11876) (actual rows=0)
                                Output: web_sales__1.ws_item_sk[3],web_sales__1.ws_ext_discount_amt[22],web_sales__1.ws_sold_date_sk[0]


