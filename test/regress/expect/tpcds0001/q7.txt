select  i_item_id, 
        avg(ss_quantity) agg1,
        avg(ss_list_price) agg2,
        avg(ss_coupon_amt) agg3,
        avg(ss_sales_price) agg4 
 from store_sales, customer_demographics, date_dim, item, promotion
 where ss_sold_date_sk = d_date_sk and
       ss_item_sk = i_item_sk and
       ss_cdemo_sk = cd_demo_sk and
       ss_promo_sk = p_promo_sk and
       cd_gender = 'F' and 
       cd_marital_status = 'W' and
       cd_education_status = 'College' and
       (p_channel_email = 'N' or p_channel_event = 'N') and
       d_year = 2001 
 group by i_item_id
 order by i_item_id
 limit 100
Total cost: 222619.76, memory=218115
PhysicLimit (100) (inccost=222619.76, cost=100, rows=100) (actual rows=9)
    Output: item.i_item_id[0],{avg(store_sales.ss_quantity)}[1],{avg(store_sales.ss_list_price)}[2],{avg(store_sales.ss_coupon_amt)}[3],{avg(store_sales.ss_sales_price)}[4]
    -> PhysicOrder  (inccost=222519.76, cost=7015.76, rows=1001, memory=41041) (actual rows=9)
        Output: item.i_item_id[0],{avg(store_sales.ss_quantity)}[1],{avg(store_sales.ss_list_price)}[2],{avg(store_sales.ss_coupon_amt)}[3],{avg(store_sales.ss_sales_price)}[4]
        Order by: item.i_item_id[0]
        -> PhysicHashAgg  (inccost=215504, cost=10873, rows=1001, memory=82082) (actual rows=9)
            Output: {item.i_item_id}[0],{avg(store_sales.ss_quantity)}[1],{avg(store_sales.ss_list_price)}[2],{avg(store_sales.ss_coupon_amt)}[3],{avg(store_sales.ss_sales_price)}[4]
            Aggregates: avg(store_sales.ss_quantity[1]), avg(store_sales.ss_list_price[2]), avg(store_sales.ss_coupon_amt[3]), avg(store_sales.ss_sales_price[4])
            Group by: item.i_item_id[0]
            -> PhysicHashJoin  (inccost=204631, cost=18136, rows=8871, memory=12056) (actual rows=9)
                Output: item.i_item_id[1],store_sales.ss_quantity[2],store_sales.ss_list_price[3],store_sales.ss_coupon_amt[4],store_sales.ss_sales_price[5]
                Filter: store_sales.ss_cdemo_sk[6]=customer_demographics.cd_demo_sk[0]
                -> PhysicScanTable customer_demographics (inccost=105515, cost=105515, rows=1507) (actual rows=1507)
                    Output: customer_demographics.cd_demo_sk[0]
                    Filter: ((customer_demographics.cd_gender[1]='F' and customer_demographics.cd_marital_status[2]='W') and customer_demographics.cd_education_status[3]='College')
                -> PhysicHashJoin  (inccost=80980, cost=16446, rows=6251, memory=80000) (actual rows=2291)
                    Output: item.i_item_id[0],store_sales.ss_quantity[2],store_sales.ss_list_price[3],store_sales.ss_coupon_amt[4],store_sales.ss_sales_price[5],store_sales.ss_cdemo_sk[6]
                    Filter: store_sales.ss_item_sk[7]=item.i_item_sk[1]
                    -> PhysicScanTable item (inccost=2000, cost=2000, rows=2000) (actual rows=2000)
                        Output: item.i_item_id[1],item.i_item_sk[0]
                    -> PhysicHashJoin  (inccost=62534, cost=12396, rows=6195, memory=24) (actual rows=2291)
                        Output: store_sales.ss_quantity[1],store_sales.ss_list_price[2],store_sales.ss_coupon_amt[3],store_sales.ss_sales_price[4],store_sales.ss_cdemo_sk[5],store_sales.ss_item_sk[6]
                        Filter: store_sales.ss_promo_sk[7]=promotion.p_promo_sk[0]
                        -> PhysicScanTable promotion (inccost=3, cost=3, rows=3) (actual rows=3)
                            Output: promotion.p_promo_sk[0]
                            Filter: (promotion.p_channel_email[9]='N' or promotion.p_channel_event[14]='N')
                        -> PhysicHashJoin  (inccost=50135, cost=19654, rows=6195, memory=2912) (actual rows=2346)
                            Output: store_sales.ss_quantity[1],store_sales.ss_list_price[2],store_sales.ss_coupon_amt[3],store_sales.ss_sales_price[4],store_sales.ss_cdemo_sk[5],store_sales.ss_item_sk[6],store_sales.ss_promo_sk[7]
                            Filter: store_sales.ss_sold_date_sk[8]=date_dim.d_date_sk[0]
                            -> PhysicScanTable date_dim (inccost=17750, cost=17750, rows=364) (actual rows=365)
                                Output: date_dim.d_date_sk[0]
                                Filter: date_dim.d_year[6]=2001
                            -> PhysicScanTable store_sales (inccost=12731, cost=12731, rows=12731) (actual rows=12731)
                                Output: store_sales.ss_quantity[10],store_sales.ss_list_price[12],store_sales.ss_coupon_amt[19],store_sales.ss_sales_price[13],store_sales.ss_cdemo_sk[4],store_sales.ss_item_sk[2],store_sales.ss_promo_sk[8],store_sales.ss_sold_date_sk[0]
AAAAAAAAAGCAAAAA,47,22.60,0.00,3.61
AAAAAAAAAGFAAAAA,17,133.42,0.00,53.36
AAAAAAAADKAAAAAA,66,137.52,0.00,82.51
AAAAAAAADMBAAAAA,28,50.24,0.00,19.09
AAAAAAAAFMFAAAAA,67,34.61,0.00,19.72
AAAAAAAAHCHAAAAA,74,152.96,0.00,97.89
AAAAAAAAIBHAAAAA,83,17.33,0.00,9.18
AAAAAAAAJOFAAAAA,76,56.01,0.00,31.36
AAAAAAAAMKAAAAAA,52,66.80,0.00,26.05

