select  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,
 	sum(ss_ext_sales_price) ext_price
 from date_dim, store_sales, item,customer,customer_address,store
 where d_date_sk = ss_sold_date_sk
   and ss_item_sk = i_item_sk
   and i_manager_id=14
   and d_moy=11
   and d_year=2002
   and ss_customer_sk = c_customer_sk 
   and c_current_addr_sk = ca_address_sk
   and substr(ca_zip,1,5) <> substr(s_zip,1,5) 
   and ss_store_sk = s_store_sk 
 group by i_brand
      ,i_brand_id
      ,i_manufact_id
      ,i_manufact
 order by ext_price desc
         ,i_brand
         ,i_brand_id
         ,i_manufact_id
         ,i_manufact
limit 100
Total cost: 57787.84, memory=137467
PhysicLimit (100) (inccost=57787.84, cost=100, rows=100) (actual rows=3)
    Output: item.i_brand_id (as brand_id)[0],item.i_brand (as brand)[1],item.i_manufact_id[2],item.i_manufact[3],{sum(store_sales.ss_ext_sales_price)}[4]
    -> PhysicOrder  (inccost=57687.84, cost=57.84, rows=19, memory=2185) (actual rows=3)
        Output: item.i_brand_id (as brand_id)[0],item.i_brand (as brand)[1],item.i_manufact_id[2],item.i_manufact[3],{sum(store_sales.ss_ext_sales_price)}[4]
        Order by: {sum(store_sales.ss_ext_sales_price)}[4], item.i_brand[1], item.i_brand_id[0], item.i_manufact_id[2], item.i_manufact[3]
        -> PhysicHashAgg  (inccost=57630, cost=57, rows=19, memory=4370) (actual rows=3)
            Output: {item.i_brand_id}[1],{item.i_brand}[0],{item.i_manufact_id}[2],{item.i_manufact}[3],{sum(store_sales.ss_ext_sales_price)}[4]
            Aggregates: sum(store_sales.ss_ext_sales_price[4])
            Group by: item.i_brand[1], item.i_brand_id[0], item.i_manufact_id[2], item.i_manufact[3]
            -> PhysicHashJoin  (inccost=57573, cost=553, rows=19, memory=240) (actual rows=4)
                Output: item.i_brand_id (as brand_id)[1],item.i_brand (as brand)[2],item.i_manufact_id[3],item.i_manufact[4],store_sales.ss_ext_sales_price[5]
                Filter: date_dim.d_date_sk[0]=store_sales.ss_sold_date_sk[6]
                -> PhysicScanTable date_dim (inccost=17750, cost=17750, rows=30) (actual rows=30)
                    Output: date_dim.d_date_sk[0]
                    Filter: (date_dim.d_moy[8]=11 and date_dim.d_year[6]=2002)
                -> PhysicNLJoin  (inccost=39270, cost=5808, rows=474) (actual rows=130)
                    Output: item.i_brand_id (as brand_id)[2],item.i_brand (as brand)[3],item.i_manufact_id[4],item.i_manufact[5],store_sales.ss_ext_sales_price[6],store_sales.ss_sold_date_sk[7]
                    Filter: (substring(customer_address.ca_zip[8],1,5)<>substring(store.s_zip[0],1,5) and store_sales.ss_store_sk[9]=store.s_store_sk[1])
                    -> PhysicScanTable store (inccost=2, cost=2, rows=2) (actual rows=2)
                        Output: store.s_zip[25],store.s_store_sk[0]
                    -> PhysicHashJoin  (inccost=33460, cost=2066, rows=474, memory=75184) (actual rows=138, loops=2)
                        Output: item.i_brand_id (as brand_id)[0],item.i_brand (as brand)[1],item.i_manufact_id[2],item.i_manufact[3],store_sales.ss_ext_sales_price[4],store_sales.ss_sold_date_sk[5],customer_address.ca_zip[8],store_sales.ss_store_sk[6]
                        Filter: customer.c_current_addr_sk[7]=customer_address.ca_address_sk[9]
                        -> PhysicHashJoin  (inccost=30394, cost=1680, rows=296, memory=48768) (actual rows=138, loops=2)
                            Output: item.i_brand_id (as brand_id)[0],item.i_brand (as brand)[1],item.i_manufact_id[2],item.i_manufact[3],store_sales.ss_ext_sales_price[4],store_sales.ss_sold_date_sk[5],store_sales.ss_store_sk[6],customer.c_current_addr_sk[8]
                            Filter: store_sales.ss_customer_sk[7]=customer.c_customer_sk[9]
                            -> PhysicHashJoin  (inccost=27714, cost=12983, rows=192, memory=6720) (actual rows=141, loops=2)
                                Output: item.i_brand_id (as brand_id)[0],item.i_brand (as brand)[1],item.i_manufact_id[2],item.i_manufact[3],store_sales.ss_ext_sales_price[5],store_sales.ss_sold_date_sk[6],store_sales.ss_store_sk[7],store_sales.ss_customer_sk[8]
                                Filter: store_sales.ss_item_sk[9]=item.i_item_sk[4]
                                -> PhysicScanTable item (inccost=2000, cost=2000, rows=30) (actual rows=30, loops=2)
                                    Output: item.i_brand_id (as brand_id)[7],item.i_brand (as brand)[8],item.i_manufact_id[13],item.i_manufact[14],item.i_item_sk[0]
                                    Filter: item.i_manager_id[20]=14
                                -> PhysicScanTable store_sales (inccost=12731, cost=12731, rows=12731) (actual rows=12731, loops=2)
                                    Output: store_sales.ss_ext_sales_price[15],store_sales.ss_sold_date_sk[0],store_sales.ss_store_sk[7],store_sales.ss_customer_sk[3],store_sales.ss_item_sk[2]
                            -> PhysicScanTable customer (inccost=1000, cost=1000, rows=1000) (actual rows=1000, loops=2)
                                Output: customer.c_current_addr_sk[4],customer.c_customer_sk[0]
                        -> PhysicScanTable customer_address (inccost=1000, cost=1000, rows=1000) (actual rows=1000, loops=2)
                            Output: customer_address.ca_zip[9],customer_address.ca_address_sk[0]
2002002,importoamalg #1,137,ationpriought,5143.24
2004002,edu packimporto #2,264,esecallyable,1725.68
4004001,edu packedu pack #1,191,prieingought,190.40

