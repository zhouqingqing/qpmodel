select
	supp_nation,
	cust_nation,
	l_year,
	sum(volume) as revenue
from
	(
		select
			n1.n_name as supp_nation,
			n2.n_name as cust_nation,
			year(l_shipdate) as l_year,
			l_extendedprice * (1 - l_discount) as volume
		from
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2
		where
			s_suppkey = l_suppkey
			and o_orderkey = l_orderkey
			and c_custkey = o_custkey
			and s_nationkey = n1.n_nationkey
			and c_nationkey = n2.n_nationkey
			and (
				(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
				or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
			)
			and l_shipdate between (date '1995-01-01' , date '1996-12-31')
	) as shipping
group by
	supp_nation,
	cust_nation,
	l_year
order by
	supp_nation,
	cust_nation,
	l_year
Total cost: 167058814.1, memory=26632698
PhysicOrder  (inccost=167058814.1, cost=0.1, rows=1, memory=66)
    Output: supp_nation[0],cust_nation[1],l_year[2],{sum(volume)}[3]
    Order by: supp_nation[0], cust_nation[1], l_year[2]
    -> PhysicHashAgg  (inccost=167058814, cost=2738165, rows=1, memory=132)
        Output: {supp_nation}[0],{cust_nation}[1],{l_year}[2],{sum(volume)}[3]
        Aggregates: sum(volume[3])
        Group by: supp_nation[0], cust_nation[1], l_year[2]
        -> PhysicFromQuery <shipping> (inccost=164320649, cost=2738163, rows=2738163)
            Output: supp_nation[0],cust_nation[1],l_year[2],volume[3]
            -> PhysicHashJoin  (inccost=161582486, cost=71212238, rows=2738163, memory=160000)
                Output: n_name (as supp_nation)[2],n_name (as cust_nation)[3],{year(l_shipdate)}[4],{l_extendedprice*1-l_discount(as volume)}[5]
                Filter: s_suppkey[0]=l_suppkey[6] and s_nationkey[1]=n_nationkey[7]
                -> PhysicScanTable supplier (inccost=10000, cost=10000, rows=10000)
                    Output: s_suppkey[0],s_nationkey[3]
                -> PhysicHashJoin  (inccost=90360248, cost=71193488, rows=68454075, memory=72500)
                    Output: n_name (as supp_nation)[0],n_name (as cust_nation)[1],{year(l_shipdate)}[4],{l_extendedprice*1-l_discount(as volume)}[5],l_suppkey[6],n_nationkey[2]
                    Filter: c_nationkey[7]=n_nationkey[3]
                    -> PhysicNLJoin  (inccost=1275, cost=1225, rows=625)
                        Output: n_name (as supp_nation)[2],n_name (as cust_nation)[0],n_nationkey[3],n_nationkey[1]
                        Filter: n_name[2]='FRANCE' and n_name[0]='GERMANY' or n_name[2]='GERMANY' and n_name[0]='FRANCE'
                        -> PhysicScanTable nation as n2 (inccost=25, cost=25, rows=25)
                            Output: n_name (as cust_nation)[1],n_nationkey[0]
                        -> PhysicScanTable nation as n1 (inccost=25, cost=25, rows=25)
                            Output: n_name (as supp_nation)[1],n_nationkey[0]
                    -> PhysicHashJoin  (inccost=19165485, cost=4863532, rows=2738163, memory=2400000)
                        Output: {year(l_shipdate)}[2],{l_extendedprice*1-l_discount(as volume)}[3],l_suppkey[4],c_nationkey[0]
                        Filter: c_custkey[1]=o_custkey[5]
                        -> PhysicScanTable customer (inccost=150000, cost=150000, rows=150000)
                            Output: c_nationkey[3],c_custkey[0]
                        -> PhysicHashJoin  (inccost=14151953, cost=6650738, rows=1825369, memory=24000000)
                            Output: {year(l_shipdate)}[2],{l_extendedprice*1-l_discount(as volume)}[3],l_suppkey[4],o_custkey[0]
                            Filter: o_orderkey[1]=l_orderkey[5]
                            -> PhysicScanTable orders (inccost=1500000, cost=1500000, rows=1500000)
                                Output: o_custkey[1],o_orderkey[0]
                            -> PhysicScanTable lineitem (inccost=6001215, cost=6001215, rows=1825369)
                                Output: year(l_shipdate[10]),l_extendedprice[5]*1-l_discount[6](as volume),l_suppkey[2],l_orderkey[0]
                                Filter: l_shipdate[10]>='1995-01-01' and l_shipdate[10]<='1996-12-31'
